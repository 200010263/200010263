<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    sql映射文件：写SQL语句，mybatis会执行这些语句

    1，指定约束文件
    <!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

        mybatis-3-mapper.dtd：约束文件的名称
        约束文件的作用：检查文件中出现的标签，符合mybatis规则

    2，mapper：当前文件的根标签
       namespcae：命名空间，规定为使用的dao接口的全限定名称

    3，标签
       select
       update
       insert
       delete
-->
<mapper namespace="com.bwna.Dao.StudentDao">

<!--    id:要执行的sql语句的唯一标识，规定为接口中的方法名称
        resultType：表示返回的结果类型，执行sql语句后得到resultType的java对象类型
                    规定为实体类的全限定名称
        parameterType:dao接口中方法参数的类型，值是java数据类型的全限定名称或者mybatis定义的别名
                例如：parameterType="java.lang.Integer"
                      parameterType="int"
                 并非强制要写，一般不写
-->
    <select id="selectStudents" resultType="com.bwna.domian.Student">
        select id,name,email,age from Student order by id
    </select>

    <select id="selectStudentById" parameterType="java.lang.Integer" resultType="com.bwna.domian.Student">
        select id,name,email,age from Student where id=#{id}
    </select>

    <insert id="insertStudent">
        insert into student values(#{id},#{name},#{email},#{age})
    </insert>

<!--    多个参数，使用@param命名-->
    <select id="selectStudentByMultiParam" resultType="com.bwna.domian.Student">
        select id,name,email,age from Student where id=#{id} or name=#{name}
    </select>

    <!--    多个参数，使用student对象传参数,以对象属性为值传入实参-->
    <select id="selectStudentByStudent" resultType="com.bwna.domian.Student">
        select id,name,email,age from Student where age=#{age} or name=#{name}
    </select>

</mapper>